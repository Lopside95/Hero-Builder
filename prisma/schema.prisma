datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String           @unique
  password       String
  pic            String
  FinalHero      FinalHero[]
  ExampleHero    ExampleHero[]
  simpleHero     SimpleHero[]
  FinalFinalHero FinalFinalHero[]
}

model SimpleHero {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  boots  String
  weapon String
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model Boots {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  // bootsId     String
  name           String
  moveSpeed      Int
  description    String
  bonus          String
  cost           Int
  url            String
  FinalHero      FinalHero[]
  FinalFinalHero FinalFinalHero[]
}

model Weapon {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  // weaponId    String
  name           String
  damage         Int
  description    String
  bonus          String
  cost           Int
  url            String
  FinalHero      FinalHero[]
  FinalFinalHero FinalFinalHero[]
}

model HeroDetails {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  totalSpeed  Int
  totalDamage Int
  name        String
  profilePic  String
  backstory   String
  FinalHero   FinalHero[]
}

model FinalHero {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  bootsId   String      @db.ObjectId
  weaponId  String      @db.ObjectId
  detailsId String      @db.ObjectId
  boots     Boots       @relation(fields: [bootsId], references: [id])
  weapon    Weapon      @relation(fields: [weaponId], references: [id])
  details   HeroDetails @relation(fields: [detailsId], references: [id])
  userId    String      @db.ObjectId
  user      User        @relation(fields: [userId], references: [id])
}

model FinalFinalHero {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  bootsId   String @db.ObjectId
  weaponId  String @db.ObjectId
  boots     Boots  @relation(fields: [bootsId], references: [id])
  weapon    Weapon @relation(fields: [weaponId], references: [id])
  name      String
  damage    Int
  moveSpeed Int
  backstory String
  pic       String
  userId    String @db.ObjectId
  user      User   @relation(fields: [userId], references: [id])
}

model ExampleHero {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  damage    String
  speed     String
  img       String
  bootsImg  String
  weaponImg String
  userId    String @db.ObjectId
  user      User   @relation(fields: [userId], references: [id])
}

// bootsId    String @db.ObjectId
// weaponId   String @db.ObjectId
// boots      Boots  @relation(fields: [bootsId], references: [id])
// weapon     Weapon @relation(fields: [weaponId], references: [id])
// Boots      Boots?  @relation(fields: [bootsId], references: [id])
// bootsId    String? @db.ObjectId
// Weapon     Weapon? @relation(fields: [weaponId], references: [id])
// weaponId   String? @db.ObjectId
// model FinalHero {
// id          String  @id @default(auto()) @map("_id") @db.ObjectId
//   name  String
//   backstory String?
//   totalDmg

// }
